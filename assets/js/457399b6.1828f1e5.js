"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[3504],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,y=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?o.createElement(y,s(s({ref:t},p),{},{components:r})):o.createElement(y,s({ref:t},p))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[d]="string"==typeof e?e:n,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},74939:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var o=r(87462),n=(r(67294),r(3905));const a={id:"overview",title:"Deployment",description:"Guides for deploying Tracetest Core. Tracetest Core allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},s=void 0,i={unversionedId:"core/deployment/overview",id:"core/deployment/overview",title:"Deployment",description:"Guides for deploying Tracetest Core. Tracetest Core allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",source:"@site/docs/core/deployment/overview.mdx",sourceDirName:"core/deployment",slug:"/core/deployment/overview",permalink:"/core/deployment/overview",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/core/deployment/overview.mdx",tags:[],version:"current",frontMatter:{id:"overview",title:"Deployment",description:"Guides for deploying Tracetest Core. Tracetest Core allows you to quickly build integration and end-to-end tests, powered by your OpenTelemetry traces.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"coreSidebar",previous:{title:"Upgrade Tracetest Version",permalink:"/core/configuration/upgrade"},next:{title:"Docker Deployment",permalink:"/core/deployment/docker"}},c={},l=[],p={toc:l},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"This section contains a general overview of deploying Tracetest in production. You can find platform-specific guides for:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/core/deployment/docker"},"Docker")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/core/deployment/kubernetes"},"Kubernetes"))),(0,n.kt)("p",null,"As shown in the diagram below, a typical production Tracetest deployment consists of Postgres, an OpenTelemetry Colletor and a ",(0,n.kt)("a",{parentName:"p",href:"/configuration/overview"},"trace data store"),". But, if you do not want to use a trace data store, you can rely entirely on OpenTelemetry Collector."),(0,n.kt)("mermaid",{value:'flowchart TD\n    A(("Tracetest"))\n    B[(Postgres)]\n    C(OpenTelemetry Collector)\n    D("Trace data store (optional)")\n\n\n    A <--\x3e |Tracetest stores test run data in Postgres| B\n    C --\x3e |OTel Collector sends traces to the trace data store| D\n    D --\x3e |Tracetest fetches traces to enrich e2e and integration tests| A\n\n    classDef tracetest fill:#61175e,stroke:#61175e,stroke-width:4px,color:#ffffff;\n\n    class A tracetest'}),(0,n.kt)("p",null,"Postgres stores all Tracetest-related data."),(0,n.kt)("p",null,"OpenTelemetry Collector ingests traces from your distributed system and forwards them to a trace data store."),(0,n.kt)("p",null,"A trace data store is used to store traces. Tracetest will fetch trace data from the trace data store when running tests."),(0,n.kt)("p",null,"Tracetest can be configured via a configuration file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"# tracetest.yaml\n\npostgres:\n  host: postgres\n  user: postgres\n  password: postgres\n  port: 5432\n  dbname: postgres\n  params: sslmode=disable\n")),(0,n.kt)("p",null,"Read more in the ",(0,n.kt)("a",{parentName:"p",href:"/configuration/overview"},"configuration docs"),"."),(0,n.kt)("p",null,"Or, continue reading to see how to run Tracetest Core in production with ",(0,n.kt)("a",{parentName:"p",href:"/core/deployment/docker"},"Docker")," or ",(0,n.kt)("a",{parentName:"p",href:"/core/deployment/kubernetes"},"Kubernetes"),"."))}u.isMDXComponent=!0}}]);