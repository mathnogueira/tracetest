"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[9235],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),g=o,u=d["".concat(c,".").concat(g)]||d[g]||h[g]||a;return n?r.createElement(u,i(i({ref:t},p),{},{components:n})):r.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},28880:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={id:"lightstep",title:"Lightstep",description:"Use Lightstep as the trace data store for Tracetest. Configure the OpenTelemetry Collector to receive traces and forward them to both Tracetest and Lightstep.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},i=void 0,s={unversionedId:"configuration/connecting-to-data-stores/lightstep",id:"configuration/connecting-to-data-stores/lightstep",title:"Lightstep",description:"Use Lightstep as the trace data store for Tracetest. Configure the OpenTelemetry Collector to receive traces and forward them to both Tracetest and Lightstep.",source:"@site/docs/configuration/connecting-to-data-stores/lightstep.mdx",sourceDirName:"configuration/connecting-to-data-stores",slug:"/configuration/connecting-to-data-stores/lightstep",permalink:"/configuration/connecting-to-data-stores/lightstep",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/configuration/connecting-to-data-stores/lightstep.mdx",tags:[],version:"current",frontMatter:{id:"lightstep",title:"Lightstep",description:"Use Lightstep as the trace data store for Tracetest. Configure the OpenTelemetry Collector to receive traces and forward them to both Tracetest and Lightstep.",keywords:["tracetest","trace-based testing","observability","distributed tracing","testing"],image:"https://res.cloudinary.com/djwdcmwdz/image/upload/v1698686403/docs/Blog_Thumbnail_14_rsvkmo.jpg"},sidebar:"tutorialSidebar",previous:{title:"Jaeger",permalink:"/configuration/connecting-to-data-stores/jaeger"},next:{title:"New Relic",permalink:"/configuration/connecting-to-data-stores/new-relic"}},c={},l=[{value:"Configuring OpenTelemetry Collector to Send Traces to both Lightstep and Tracetest",id:"configuring-opentelemetry-collector-to-send-traces-to-both-lightstep-and-tracetest",level:2},{value:"Configure Tracetest to Use Lightstep as a Trace Data Store",id:"configure-tracetest-to-use-lightstep-as-a-trace-data-store",level:2},{value:"Connect Tracetest to Lightstep with the Web UI",id:"connect-tracetest-to-lightstep-with-the-web-ui",level:2},{value:"Connect Tracetest to Lightstep with the CLI",id:"connect-tracetest-to-lightstep-with-the-cli",level:2}],p={toc:l},d="wrapper";function h(e){let{components:t,...a}=e;return(0,o.kt)(d,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you want to use ",(0,o.kt)("a",{parentName:"p",href:"https://lightstep.com/"},"Lightstep")," as the trace data store, you'll configure the OpenTelemetry Collector to receive traces from your system and then send them to both Tracetest and Lightstep. And, you don't have to change your existing pipelines to do so."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Examples of configuring Tracetest with Lightstep can be found in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/tree/main/examples"},(0,o.kt)("inlineCode",{parentName:"a"},"examples")," folder of the Tracetest GitHub repo"),".")),(0,o.kt)("h2",{id:"configuring-opentelemetry-collector-to-send-traces-to-both-lightstep-and-tracetest"},"Configuring OpenTelemetry Collector to Send Traces to both Lightstep and Tracetest"),(0,o.kt)("p",null,"In your OpenTelemetry Collector config file:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Set the ",(0,o.kt)("inlineCode",{parentName:"li"},"exporter")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"otlp/tracetest")),(0,o.kt)("li",{parentName:"ul"},"Set the ",(0,o.kt)("inlineCode",{parentName:"li"},"endpoint")," to your Tracetest instance on port ",(0,o.kt)("inlineCode",{parentName:"li"},"4317"))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you are running Tracetest with Docker, and Tracetest's service name is ",(0,o.kt)("inlineCode",{parentName:"p"},"tracetest"),", then the endpoint might look like this ",(0,o.kt)("inlineCode",{parentName:"p"},"http://tracetest:4317"))),(0,o.kt)("p",null,"Additionally, add another config:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Set the ",(0,o.kt)("inlineCode",{parentName:"li"},"exporter")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"otlp/lightstep")),(0,o.kt)("li",{parentName:"ul"},"Set the ",(0,o.kt)("inlineCode",{parentName:"li"},"endpoint")," pointing to your Lightstep account and the Lightstep ingest API"),(0,o.kt)("li",{parentName:"ul"},"Set your Lightstep access token as a ",(0,o.kt)("inlineCode",{parentName:"li"},"header"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# collector.config.yaml\n\n# If you already have receivers declared, you can just ignore\n# this one and still use yours instead.\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n      http:\n\nprocessors:\n  batch:\n    timeout: 100ms\n\nexporters:\n  logging:\n    logLevel: debug\n  # OTLP for Tracetest\n  otlp/tracetest:\n    endpoint: tracetest:4317 # Send traces to Tracetest. Read more in docs here:  https://docs.tracetest.io/configuration/connecting-to-data-stores/opentelemetry-collector\n    tls:\n      insecure: true\n  # OTLP for Lightstep\n  otlp/lightstep:\n    endpoint: ingest.lightstep.com:443\n    headers:\n      "lightstep-access-token": "<lightstep_access_token>" # Send traces to Lightstep. Read more in docs here: https://docs.lightstep.com/otel/otel-quick-start\n\nservice:\n  pipelines:\n    # Your probably already have a traces pipeline, you don\'t have to change it.\n    # Add these two to your configuration. Just make sure to not have two\n    # pipelines with the same name\n    traces/tracetest:\n      receivers: [otlp] # your receiver\n      processors: [batch]\n      exporters: [otlp/tracetest] # your exporter pointing to your tracetest instance\n    traces/lightstep:\n      receivers: [otlp] # your receiver\n      processors: [batch]\n      exporters: [logging, otlp/lightstep] # your exporter pointing to your lighstep account\n')),(0,o.kt)("h2",{id:"configure-tracetest-to-use-lightstep-as-a-trace-data-store"},"Configure Tracetest to Use Lightstep as a Trace Data Store"),(0,o.kt)("p",null,"Configure your Tracetest instance to expose an ",(0,o.kt)("inlineCode",{parentName:"p"},"otlp")," endpoint to make it aware it will receive traces from the OpenTelemetry Collector. This will expose Tracetest's trace receiver on port ",(0,o.kt)("inlineCode",{parentName:"p"},"4317"),"."),(0,o.kt)("h2",{id:"connect-tracetest-to-lightstep-with-the-web-ui"},"Connect Tracetest to Lightstep with the Web UI"),(0,o.kt)("p",null,"In the Web UI, (1) open Settings, and, on the (2) Configure Data Store tab, select (3) Lightstep."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Lightstep",src:n(55635).Z,width:"2856",height:"1578"})),(0,o.kt)("h2",{id:"connect-tracetest-to-lightstep-with-the-cli"},"Connect Tracetest to Lightstep with the CLI"),(0,o.kt)("p",null,"Or, if you prefer using the CLI, you can use this file config."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"type: DataStore\nspec:\n  name: Lightstep pipeline\n  type: lightstep\n  default: true\n")),(0,o.kt)("p",null,"Proceed to run this command in the terminal and specify the file above."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tracetest apply datastore -f my/data-store/file/location.yaml\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"To learn more, ",(0,o.kt)("a",{parentName:"p",href:"/examples-tutorials/recipes/running-tracetest-with-lightstep"},"read the recipe on running a sample app with Lightstep and Tracetest"),".")))}h.isMDXComponent=!0},55635:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Lightstep-settings-c866e393a26cc5d1f52f1bd9c8800ccd.png"}}]);